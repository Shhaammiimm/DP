//A positive integer may be expressed as a sum of different prime numbers (primes), in one way or
another. Given two positive integers n and k, you should count the number of ways to express n as a
sum of k different primes
const int N=1200;

ll dp[260][N][15],n,k;
bool seive[1010000];
vector<int>prime;
void seivegen( int limit) {
    limit += 100;
    int sqrtn = sqrt(limit);
    for(int i = 3; i <= sqrtn; i += 2) {
            if(!seive[i>>1]) {
                    for(int j = i * i; j < limit; j += i + i) {
                            seive[j>>1] = 1;
                    }
            }
    }

    prime.pb(2);
    for(int i = 3; i < limit; i += 2) {
            if(!seive[i>>1]) prime.pb(i);
    }
}

ll ok(ll i,ll j,ll cnt){
 if(i==sz(prime)||j>=n || cnt>=k){
    return (j==n && cnt==k);
 }
 if(dp[i][j][cnt]!=-1)return dp[i][j][cnt];
 ll tmp=0;
 tmp+=ok(i+1,j,cnt);
 tmp+=ok(i+1,j+prime[i],cnt+1);
 return dp[i][j][cnt]=tmp;
}
int main()
{
   seivegen(1200);
   ok(0,0,0);
}
